define(function(require, exports, module) {	var FW = require("../../breeze/framework/js/BreezeFW");	FW.register(		{			name:"cservice",			onCreate:function(){				//整理所有的处理逻辑				var ps=[];				for (var pname in flows){					if (flows.hasOwnProperty(pname)){						ps.push(pname);					}				}				this.API.show("view_selectFlow",ps);							},			FireEvent:{				showCfg:function(__type){					var API = this.API;					var PARAM = this.param;					//先声明一个统一处理函数					var showEdit = function(__flow,__package,__data){					    PARAM.flow = __flow;					    var package = __package || "";						//下面构造填写process部分和service填写不服						var formDesc = {							serviceName : {								title: "serviceName",								type: "Text",								valueRange: [{												checkers:[													/\w+/												],												failTips:'请输入正确业务名称'											}],								desc: "serviceName"							},							flowName : {								type: "hidden",								valueRange: __flow							}						}						for (var dd in flows[__flow]){							if (flows[__flow].hasOwnProperty(dd)){								formDesc[dd] = flows[__flow][dd];							}						}						API.show("view_mainform",package);						FW.use().createForm(formDesc,API.find("#myform"),__data);					}									var flow = service = null;					var package = "";					if (__type == 0){						var flow = this.API.find("#v_flows").val();						showEdit(flow);					}else {						service = this.API.find("#v_name").val();						package = this.API.find("#v_package").val();												this.API.doServer("GetService","service",{service:service},								function(__code,__data){							var data = eval("("+__data+")");							var flow = data.flowName;							showEdit(flow,package,data);						});					}									},				showResult:function(){					var package = this.API.find('#package').val();					var inData = this.API.find("#myform")[0].getData();					inData.flowName = this.param.flow;					var result = FW.use().toJSONString(inData);					var data = {						package:package,						serviceName:inData.serviceName,						data:result					}					this.API.show("view_result",data);				},				changePackage:function(){					var packageName = this.API.find("#v_package").val();					var list = serviceNames[packageName];					this.API.show("view_selectPackage",{sall:serviceNames,nameList:list});					this.API.find("#v_package").val(packageName);				},				submit:function(){					var param = {							data:this.API.find("#textshow").val(),							servicename:this.API.find("#serviceName").val(),							package:this.API.find("#package").val()					};					this.API.doServer("SetService","service",param,							function(code,data){						window.location.reload();					});				},				go2Create:function(){					//整理所有的处理逻辑					var ps=[];					for (var pname in flows){						if (flows.hasOwnProperty(pname)){							ps.push(pname);						}					}					this.API.show("view_selectProcess",ps);				},				go2Edit:function(){										//整理所有的处理逻辑					var nameList = null;					for (var name in serviceNames){						nameList = serviceNames[name];						break;					}					this.API.show("view_selectPackage",{sall:serviceNames,nameList:nameList});				}			},			TrigetEvent:{				showAddContent:function(__type,__nodeId){									}			}		}	);	return FW;});